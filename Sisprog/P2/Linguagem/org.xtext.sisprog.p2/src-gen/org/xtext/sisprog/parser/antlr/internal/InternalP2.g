/*
 * generated by Xtext 2.22.0
 */
grammar InternalP2;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.sisprog.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.sisprog.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.sisprog.services.P2GrammarAccess;

}

@parser::members {

 	private P2GrammarAccess grammarAccess;

    public InternalP2Parser(TokenStream input, P2GrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Programa";
   	}

   	@Override
   	protected P2GrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRulePrograma
entryRulePrograma returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProgramaRule()); }
	iv_rulePrograma=rulePrograma
	{ $current=$iv_rulePrograma.current; }
	EOF;

// Rule Programa
rulePrograma returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getProgramaAccess().getFuncoesFuncaoParserRuleCall_0_0());
				}
				lv_funcoes_0_0=ruleFuncao
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProgramaRule());
					}
					add(
						$current,
						"funcoes",
						lv_funcoes_0_0,
						"org.xtext.sisprog.P2.Funcao");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_1='END'
		{
			newLeafNode(otherlv_1, grammarAccess.getProgramaAccess().getENDKeyword_1());
		}
	)
;

// Entry rule entryRuleFuncao
entryRuleFuncao returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFuncaoRule()); }
	iv_ruleFuncao=ruleFuncao
	{ $current=$iv_ruleFuncao.current; }
	EOF;

// Rule Funcao
ruleFuncao returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncaoAccess().getNameRotuloParserRuleCall_0_0());
				}
				lv_name_0_0=ruleRotulo
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncaoRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"org.xtext.sisprog.P2.Rotulo");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getFuncaoAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFuncaoAccess().getComandosComandoParserRuleCall_2_0());
				}
				lv_comandos_2_0=ruleComando
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFuncaoRule());
					}
					add(
						$current,
						"comandos",
						lv_comandos_2_0,
						"org.xtext.sisprog.P2.Comando");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleComando
entryRuleComando returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComandoRule()); }
	iv_ruleComando=ruleComando
	{ $current=$iv_ruleComando.current; }
	EOF;

// Rule Comando
ruleComando returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getComandoAccess().getAtribuicaoParserRuleCall_0_0());
			}
			this_Atribuicao_0=ruleAtribuicao
			{
				$current = $this_Atribuicao_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getComandoAccess().getDesvioParserRuleCall_0_1());
			}
			this_Desvio_1=ruleDesvio
			{
				$current = $this_Desvio_1.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getComandoAccess().getDesvioCondicionalParserRuleCall_0_2());
			}
			this_DesvioCondicional_2=ruleDesvioCondicional
			{
				$current = $this_DesvioCondicional_2.current;
				afterParserOrEnumRuleCall();
			}
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getComandoAccess().getSemicolonKeyword_1());
		}
	)
;

// Entry rule entryRuleDesvioCondicional
entryRuleDesvioCondicional returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDesvioCondicionalRule()); }
	iv_ruleDesvioCondicional=ruleDesvioCondicional
	{ $current=$iv_ruleDesvioCondicional.current; }
	EOF;

// Rule DesvioCondicional
ruleDesvioCondicional returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='if'
		{
			newLeafNode(otherlv_0, grammarAccess.getDesvioCondicionalAccess().getIfKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getDesvioCondicionalAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDesvioCondicionalAccess().getComparacaoComparacaoParserRuleCall_2_0());
				}
				lv_comparacao_2_0=ruleComparacao
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDesvioCondicionalRule());
					}
					add(
						$current,
						"comparacao",
						lv_comparacao_2_0,
						"org.xtext.sisprog.P2.Comparacao");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getDesvioCondicionalAccess().getRightParenthesisKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getDesvioCondicionalAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDesvioCondicionalAccess().getComandosComandoParserRuleCall_5_0());
				}
				lv_comandos_5_0=ruleComando
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDesvioCondicionalRule());
					}
					add(
						$current,
						"comandos",
						lv_comandos_5_0,
						"org.xtext.sisprog.P2.Comando");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getDesvioCondicionalAccess().getRightCurlyBracketKeyword_6());
		}
		(
			otherlv_7='else'
			{
				newLeafNode(otherlv_7, grammarAccess.getDesvioCondicionalAccess().getElseKeyword_7_0());
			}
			otherlv_8='{'
			{
				newLeafNode(otherlv_8, grammarAccess.getDesvioCondicionalAccess().getLeftCurlyBracketKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDesvioCondicionalAccess().getComandoComandoParserRuleCall_7_2_0());
					}
					lv_comando_9_0=ruleComando
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDesvioCondicionalRule());
						}
						add(
							$current,
							"comando",
							lv_comando_9_0,
							"org.xtext.sisprog.P2.Comando");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getDesvioCondicionalAccess().getRightCurlyBracketKeyword_7_3());
			}
		)?
	)
;

// Entry rule entryRuleComparacao
entryRuleComparacao returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComparacaoRule()); }
	iv_ruleComparacao=ruleComparacao
	{ $current=$iv_ruleComparacao.current; }
	EOF;

// Rule Comparacao
ruleComparacao returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getComparacaoAccess().getOp1ExpressaoParserRuleCall_0_0());
				}
				lv_op1_0_0=ruleExpressao
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComparacaoRule());
					}
					set(
						$current,
						"op1",
						lv_op1_0_0,
						"org.xtext.sisprog.P2.Expressao");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getComparacaoAccess().getOprComparadorParserRuleCall_1_0());
				}
				lv_opr_1_0=rulecomparador
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComparacaoRule());
					}
					add(
						$current,
						"opr",
						lv_opr_1_0,
						"org.xtext.sisprog.P2.comparador");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getComparacaoAccess().getOp2ExpressaoParserRuleCall_2_0());
				}
				lv_op2_2_0=ruleExpressao
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComparacaoRule());
					}
					set(
						$current,
						"op2",
						lv_op2_2_0,
						"org.xtext.sisprog.P2.Expressao");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAtribuicao
entryRuleAtribuicao returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAtribuicaoRule()); }
	iv_ruleAtribuicao=ruleAtribuicao
	{ $current=$iv_ruleAtribuicao.current; }
	EOF;

// Rule Atribuicao
ruleAtribuicao returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAtribuicaoAccess().getResVariavelParserRuleCall_0_0());
				}
				lv_res_0_0=rulevariavel
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAtribuicaoRule());
					}
					set(
						$current,
						"res",
						lv_res_0_0,
						"org.xtext.sisprog.P2.variavel");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='='
		{
			newLeafNode(otherlv_1, grammarAccess.getAtribuicaoAccess().getEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAtribuicaoAccess().getAtAritmeticoParserRuleCall_2_0());
				}
				lv_at_2_0=ruleAritmetico
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAtribuicaoRule());
					}
					set(
						$current,
						"at",
						lv_at_2_0,
						"org.xtext.sisprog.P2.Aritmetico");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAritmetico
entryRuleAritmetico returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAritmeticoRule()); }
	iv_ruleAritmetico=ruleAritmetico
	{ $current=$iv_ruleAritmetico.current; }
	EOF;

// Rule Aritmetico
ruleAritmetico returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAritmeticoAccess().getOp1ExpressaoParserRuleCall_0_0());
				}
				lv_op1_0_0=ruleExpressao
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAritmeticoRule());
					}
					set(
						$current,
						"op1",
						lv_op1_0_0,
						"org.xtext.sisprog.P2.Expressao");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getAritmeticoAccess().getOprOperacaoParserRuleCall_1_0_0());
					}
					lv_opr_1_0=ruleOperacao
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAritmeticoRule());
						}
						add(
							$current,
							"opr",
							lv_opr_1_0,
							"org.xtext.sisprog.P2.Operacao");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAritmeticoAccess().getOp2ExpressaoParserRuleCall_1_1_0());
					}
					lv_op2_2_0=ruleExpressao
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAritmeticoRule());
						}
						add(
							$current,
							"op2",
							lv_op2_2_0,
							"org.xtext.sisprog.P2.Expressao");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleExpressao
entryRuleExpressao returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressaoRule()); }
	iv_ruleExpressao=ruleExpressao
	{ $current=$iv_ruleExpressao.current; }
	EOF;

// Rule Expressao
ruleExpressao returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getExpressaoAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getExpressaoAccess().getAritmeticoParserRuleCall_0_1());
			}
			this_Aritmetico_1=ruleAritmetico
			{
				$current = $this_Aritmetico_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getExpressaoAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getExpressaoAccess().getValueParserRuleCall_1());
		}
		this_Value_3=ruleValue
		{
			$current = $this_Value_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleDesvio
entryRuleDesvio returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDesvioRule()); }
	iv_ruleDesvio=ruleDesvio
	{ $current=$iv_ruleDesvio.current; }
	EOF;

// Rule Desvio
ruleDesvio returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='jump'
		{
			newLeafNode(otherlv_0, grammarAccess.getDesvioAccess().getJumpKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDesvioRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getDesvioAccess().getRotinaFuncaoCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleValue
entryRuleValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	iv_ruleValue=ruleValue
	{ $current=$iv_ruleValue.current; }
	EOF;

// Rule Value
ruleValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getValueAccess().getVariavelParserRuleCall_0());
		}
		this_variavel_0=rulevariavel
		{
			$current = $this_variavel_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getValueAccess().getValueAction_1_0(),
						$current);
				}
			)
			this_INT_2=RULE_INT
			{
				newLeafNode(this_INT_2, grammarAccess.getValueAccess().getINTTerminalRuleCall_1_1());
			}
		)
	)
;

// Entry rule entryRulevariavel
entryRulevariavel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariavelRule()); }
	iv_rulevariavel=rulevariavel
	{ $current=$iv_rulevariavel.current; }
	EOF;

// Rule variavel
rulevariavel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getVariavelAccess().getNameRotuloParserRuleCall_0());
			}
			lv_name_0_0=ruleRotulo
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getVariavelRule());
				}
				set(
					$current,
					"name",
					lv_name_0_0,
					"org.xtext.sisprog.P2.Rotulo");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleRotulo
entryRuleRotulo returns [String current=null]:
	{ newCompositeNode(grammarAccess.getRotuloRule()); }
	iv_ruleRotulo=ruleRotulo
	{ $current=$iv_ruleRotulo.current.getText(); }
	EOF;

// Rule Rotulo
ruleRotulo returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_ID_0=RULE_ID
	{
		$current.merge(this_ID_0);
	}
	{
		newLeafNode(this_ID_0, grammarAccess.getRotuloAccess().getIDTerminalRuleCall());
	}
;

// Entry rule entryRuleOperacao
entryRuleOperacao returns [String current=null]:
	{ newCompositeNode(grammarAccess.getOperacaoRule()); }
	iv_ruleOperacao=ruleOperacao
	{ $current=$iv_ruleOperacao.current.getText(); }
	EOF;

// Rule Operacao
ruleOperacao returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='+'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperacaoAccess().getPlusSignKeyword_0());
		}
		    |
		kw='-'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperacaoAccess().getHyphenMinusKeyword_1());
		}
		    |
		kw='*'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperacaoAccess().getAsteriskKeyword_2());
		}
		    |
		kw='/'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperacaoAccess().getSolidusKeyword_3());
		}
		    |
		kw='**'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getOperacaoAccess().getAsteriskAsteriskKeyword_4());
		}
	)
;

// Entry rule entryRulecomparador
entryRulecomparador returns [String current=null]:
	{ newCompositeNode(grammarAccess.getComparadorRule()); }
	iv_rulecomparador=rulecomparador
	{ $current=$iv_rulecomparador.current.getText(); }
	EOF;

// Rule comparador
rulecomparador returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='=='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComparadorAccess().getEqualsSignEqualsSignKeyword_0());
		}
		    |
		kw='!='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComparadorAccess().getExclamationMarkEqualsSignKeyword_1());
		}
		    |
		kw='<'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComparadorAccess().getLessThanSignKeyword_2());
		}
		    |
		kw='>'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComparadorAccess().getGreaterThanSignKeyword_3());
		}
		    |
		kw='<='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComparadorAccess().getLessThanSignEqualsSignKeyword_4());
		}
		    |
		kw='>='
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getComparadorAccess().getGreaterThanSignEqualsSignKeyword_5());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
