/**
 * generated by Xtext 2.22.0
 */
package org.xtext.sisprog.p2.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.sisprog.p2.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class P2FactoryImpl extends EFactoryImpl implements P2Factory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static P2Factory init()
  {
    try
    {
      P2Factory theP2Factory = (P2Factory)EPackage.Registry.INSTANCE.getEFactory(P2Package.eNS_URI);
      if (theP2Factory != null)
      {
        return theP2Factory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new P2FactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public P2FactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case P2Package.PROGRAMA: return createPrograma();
      case P2Package.FUNCAO: return createFuncao();
      case P2Package.COMANDO: return createComando();
      case P2Package.DESVIO_CONDICIONAL: return createDesvioCondicional();
      case P2Package.COMPARACAO: return createComparacao();
      case P2Package.ATRIBUICAO: return createAtribuicao();
      case P2Package.ARITMETICO: return createAritmetico();
      case P2Package.EXPRESSAO: return createExpressao();
      case P2Package.DESVIO: return createDesvio();
      case P2Package.VALUE: return createValue();
      case P2Package.VARIAVEL: return createvariavel();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Programa createPrograma()
  {
    ProgramaImpl programa = new ProgramaImpl();
    return programa;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Funcao createFuncao()
  {
    FuncaoImpl funcao = new FuncaoImpl();
    return funcao;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Comando createComando()
  {
    ComandoImpl comando = new ComandoImpl();
    return comando;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DesvioCondicional createDesvioCondicional()
  {
    DesvioCondicionalImpl desvioCondicional = new DesvioCondicionalImpl();
    return desvioCondicional;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Comparacao createComparacao()
  {
    ComparacaoImpl comparacao = new ComparacaoImpl();
    return comparacao;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Atribuicao createAtribuicao()
  {
    AtribuicaoImpl atribuicao = new AtribuicaoImpl();
    return atribuicao;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Aritmetico createAritmetico()
  {
    AritmeticoImpl aritmetico = new AritmeticoImpl();
    return aritmetico;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expressao createExpressao()
  {
    ExpressaoImpl expressao = new ExpressaoImpl();
    return expressao;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Desvio createDesvio()
  {
    DesvioImpl desvio = new DesvioImpl();
    return desvio;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Value createValue()
  {
    ValueImpl value = new ValueImpl();
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public variavel createvariavel()
  {
    variavelImpl variavel = new variavelImpl();
    return variavel;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public P2Package getP2Package()
  {
    return (P2Package)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static P2Package getPackage()
  {
    return P2Package.eINSTANCE;
  }

} //P2FactoryImpl
